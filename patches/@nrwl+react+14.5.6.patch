diff --git a/node_modules/@nrwl/react/src/generators/component/component.js b/node_modules/@nrwl/react/src/generators/component/component.js
index d7421f2..f9d0ddf 100644
--- a/node_modules/@nrwl/react/src/generators/component/component.js
+++ b/node_modules/@nrwl/react/src/generators/component/component.js
@@ -89,7 +89,7 @@ function normalizeOptions(host, options) {
         options.routing = (_c = options.routing) !== null && _c !== void 0 ? _c : false;
         options.globalCss = (_d = options.globalCss) !== null && _d !== void 0 ? _d : false;
         return Object.assign(Object.assign({}, options), { directory,
-            styledModule, hasStyles: options.style !== 'none', className, fileName: componentFileName, projectSourceRoot });
+            styledModule, hasStyles: options.style !== 'none', className, fileName: componentFileName.replace("Cmsonfire", ""), projectSourceRoot });
     });
 }
 function getDirectory(host, options) {
diff --git a/node_modules/@nrwl/react/src/generators/component/files/__fileName__.spec.tsx__tmpl__ b/node_modules/@nrwl/react/src/generators/component/files/__fileName__.spec.tsx__tmpl__
index 1254163..066a319 100644
--- a/node_modules/@nrwl/react/src/generators/component/files/__fileName__.spec.tsx__tmpl__
+++ b/node_modules/@nrwl/react/src/generators/component/files/__fileName__.spec.tsx__tmpl__
@@ -1,10 +1,41 @@
 import { render } from '@testing-library/react';
 
-import <%= className %> from './<%= fileName %>';
+import { <%= fileName %> } from './<%= fileName %>';
 
-describe('<%= className %>', () => {
+describe('<%= fileName %>', () => {
   it('should render successfully', () => {
-    const { baseElement } = render(< <%= className %> />);
+    const ControlWidget = <%= fileName %>.controlComponent;
+    const PreviewWidget = <%= fileName %>.previewComponent;
+    const { baseElement } = render(
+      <div>
+        <ControlWidget
+          forID="test"
+          onChange={(e) => e.target.value}
+          classNameWrapper=""
+          setActiveStyle={() => null}
+          setInactiveStyle={() => null}
+        />
+        <PreviewWidget value={<div>test</div>} />
+      </div>
+    );
+    expect(baseElement).toBeTruthy();
+  });
+  it('should render successfully: functional', () => {
+    const Widget = <%= fileName %>.Widget();
+    const ControlWidget = Widget.controlComponent;
+    const PreviewWidget = Widget.previewComponent;
+    const { baseElement } = render(
+      <div>
+        <ControlWidget
+          forID="test"
+          onChange={(e) => e.target.value}
+          classNameWrapper=""
+          setActiveStyle={() => null}
+          setInactiveStyle={() => null}
+        />
+        <PreviewWidget value={<div>test</div>} />
+      </div>
+    );
     expect(baseElement).toBeTruthy();
   });
 });
diff --git a/node_modules/@nrwl/react/src/generators/component/files/__fileName__.tsx__tmpl__ b/node_modules/@nrwl/react/src/generators/component/files/__fileName__.tsx__tmpl__
index 00122d4..9ce5931 100644
--- a/node_modules/@nrwl/react/src/generators/component/files/__fileName__.tsx__tmpl__
+++ b/node_modules/@nrwl/react/src/generators/component/files/__fileName__.tsx__tmpl__
@@ -23,10 +23,6 @@ import { Route, Link } from 'react-router-dom';
     var extras = '';
 } %>
 
-/* eslint-disable-next-line */
-export interface <%= className %>Props {
-}
-
 <% if (styledModule && styledModule !== 'styled-jsx') { %>
 const Styled<%= className %> = styled.div`
   color: pink;
@@ -50,20 +46,23 @@ export class <%= className %> extends Component<<%= className %>Props> {
   }
 }
 <% } else { %>
-export function <%= className %>(props: <%= className %>Props) {
-  return (
-    <<%= wrapper %><%- extras %>>
-      <% if (styledModule === 'styled-jsx') { %><style jsx>{`div { color: pink; }`}</style><% } %>
-      <h1>Welcome to <%= className %>!</h1>
-      <% if (routing) { %>
-        <ul>
-          <li><Link to="/"><%= name %> root</Link></li>
-        </ul>
-        <Route path="/" element={<div>This is the <%= name %> root route.</div>} />
-      <% } %>
-    </<%= wrapper %>>
-  );
+import { CmsWidgetOptions, CmsWidget } from '@cmsonfire/cms-types';
+import controlComponent from './<%= fileName %>Control';
+import previewComponent from './<%= fileName %>Preview';
+
+function Widget(props = {}): CmsWidgetOptions {
+  return {
+    name: 'text',
+    controlComponent,
+    previewComponent,
+    ...props,
+  };
+}
+
+export const <%= fileName %>: CmsWidget = {
+  Widget,
+  controlComponent,
+  previewComponent,
 };
 <% } %>
 
-export default <%= className %>;
diff --git a/node_modules/@nrwl/react/src/generators/component/files/__fileName__Control.tsx__tmpl__ b/node_modules/@nrwl/react/src/generators/component/files/__fileName__Control.tsx__tmpl__
new file mode 100644
index 0000000..d3a989c
--- /dev/null
+++ b/node_modules/@nrwl/react/src/generators/component/files/__fileName__Control.tsx__tmpl__
@@ -0,0 +1,25 @@
+import { ControlComponentProps } from '@cmsonfire/cms-types';
+
+const <%= fileName %>Control = (props: ControlComponentProps) => {
+  const {
+    forID, 
+    value,
+    onChange,
+    classNameWrapper,
+    setActiveStyle,
+    setInactiveStyle,
+  } = props;
+
+  return (
+    <input
+      id={forID}
+      value={value || ''}
+      className={classNameWrapper}
+      onFocus={setActiveStyle}
+      onBlur={setInactiveStyle}
+      onChange={(e) => onChange(e.target.value)}
+    />
+  );
+};
+
+export default <%= fileName %>Control;
diff --git a/node_modules/@nrwl/react/src/generators/component/files/__fileName__Preview.tsx__tmpl__ b/node_modules/@nrwl/react/src/generators/component/files/__fileName__Preview.tsx__tmpl__
new file mode 100644
index 0000000..308b7ba
--- /dev/null
+++ b/node_modules/@nrwl/react/src/generators/component/files/__fileName__Preview.tsx__tmpl__
@@ -0,0 +1,8 @@
+import { PreviewComponentProps } from '@cmsonfire/cms-types';
+
+function <%= fileName %>Preview(props: PreviewComponentProps) {
+  return <div>{props.value}</div>;
+}
+
+export default <%= fileName %>Preview; 
+
diff --git a/node_modules/@nrwl/react/src/generators/library/files/lib/.babelrc__tmpl__ b/node_modules/@nrwl/react/src/generators/library/files/lib/.babelrc__tmpl__
index fccd738..35455fa 100644
--- a/node_modules/@nrwl/react/src/generators/library/files/lib/.babelrc__tmpl__
+++ b/node_modules/@nrwl/react/src/generators/library/files/lib/.babelrc__tmpl__
@@ -1,16 +1,8 @@
 {
   "presets": [
-    [
-      "@nrwl/react/babel", {
-        "runtime": "automatic",
-        "useBuiltIns": "usage"
-        <% if (style === '@emotion/styled') { %>,"importSource": "@emotion/react"<% } %>
-      }
-    ]
+    "@babel/preset-env",
+    "@babel/preset-typescript",
+    ["@babel/preset-react", { "runtime": "automatic" }]
   ],
-  "plugins": [
-    <% if (style === 'styled-components') { %>["styled-components", { "pure": true, "ssr": true }]<% } %>
-    <% if (style === 'styled-jsx') { %>"styled-jsx/babel"<% } %>
-    <% if (style === '@emotion/styled') { %>"@emotion/babel-plugin"<% } %>
-  ]
+  "plugins": ["@babel/plugin-syntax-jsx"]
 }
diff --git a/node_modules/@nrwl/react/src/generators/library/files/lib/tsconfig.json__tmpl__ b/node_modules/@nrwl/react/src/generators/library/files/lib/tsconfig.json__tmpl__
index c5c5460..eabc8a3 100644
--- a/node_modules/@nrwl/react/src/generators/library/files/lib/tsconfig.json__tmpl__
+++ b/node_modules/@nrwl/react/src/generators/library/files/lib/tsconfig.json__tmpl__
@@ -2,10 +2,15 @@
   "extends": "<%= rootTsConfigPath %>",
   "compilerOptions": {
     "jsx": "react-jsx",
-    <% if (style === '@emotion/styled') { %>"jsxImportSource": "@emotion/react",<% } %>
     "allowJs": true,
     "esModuleInterop": true,
-    "allowSyntheticDefaultImports": true
+    "allowSyntheticDefaultImports": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true,
+    "noImplicitOverride": true,
+    "noPropertyAccessFromIndexSignature": true,
+    "noImplicitReturns": true,
+    "noFallthroughCasesInSwitch": true
   },
   "files": [],
   "include": [],
